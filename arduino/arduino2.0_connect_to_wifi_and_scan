#include <SoftwareSerial.h>

#define RX 2
#define TX 3

SoftwareSerial esp8266(RX,TX);

String wifiSSID = "Det_ved_jeg";
String wifiPass = "Vfp62rxu";

String IPRange = "192.168.1.";
String port = "21";

int countTrueCommand;
int countTimeCommand;

int wifiStep = 1;

void setup() {
  // put your setup code here, to run once:

  Serial.begin(115200);
  Serial.println("Starting...");

  esp8266.begin(115200);
 
  delay(2000);

}

void loop() {

  switch(wifiStep)
  {
    case 1:
      //Reset
      sendBasicCommand("AT+RST",10, 2);
    break;

    case 2:
      //Set Mode
      sendBasicCommand("AT+CWMODE_CUR=1",5, 5);
     
    break;

    case 5:
      //Connect to router
      sendBasicCommand("AT+CWJAP_CUR=\""+ wifiSSID + "\",\"" + wifiPass + "\"",15, 6);
    break;

    case 6:
      //Create Connection Connection
      sendBasicCommand("AT+CIPSTART=\"TCP\",\"" + IPRange + "\"," + port + "",5, 7);
    break;

    case 9:
      //Close Connection
      //sendBasicCommand("AT+CIPCLOSE",5, 6);
      wifiStep = 6;
      delay(5000);     
    break;
   
    default:
      wifiStep = 1;
    break;
  }

  delay(500);
}

void sendBasicCommand(String command, int maxTime, int nextStep) {
   Serial.print("command ");
   Serial.print(command);

    boolean found = false;
 
  while(countTimeCommand < (maxTime*1))
  {
    char data = esp8266.read();
    esp8266.println(command);
    if(esp8266.find("OK"))
    {
      found = true;
      break;
    }
 
    countTimeCommand++;
  }
 
  if(found == true)
  {
    Serial.print(" (good)");
    countTrueCommand++;
    countTimeCommand = 0;

    if(nextStep != -1){
      wifiStep = nextStep;
    }
  }
 
  if(found == false)
  {
    Serial.print(" (fail)!!!!!!!!!");
    countTrueCommand = 0;

    //if failed then reset the wifi status to 0 so start the process again from the beginning
    wifiStep = 1;
  }
 
  Serial.println("");

 }
